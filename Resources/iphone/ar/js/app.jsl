var currentLocation = {
	"latitude": null,
	"longitude": null,
	"altitude": null,
	"accuracy": null
};

var Overlays = {
	challengeOverlayLocations: [
		[ 0.00010,-0.00020, 0],
		[ 0.00010,-0.00015, 0],
		[ 0.00010,-0.00010, 0],
		[ 0.00010,-0.00005, 0],
		[ 0.00010, 0.00000, 0],
		[ 0.00010, 0.00005, 0],
		[ 0.00010, 0.00010, 0],
		[ 0.00010, 0.00015, 0],
		[ 0.00010, 0.00020, 0],
		
		[-0.00010,-0.00020, 0],
		[-0.00010,-0.00015, 0],
		[-0.00010,-0.00010, 0],
		[-0.00010,-0.00005, 0],
		[-0.00010, 0.00000, 0],
		[-0.00010, 0.00005, 0],
		[-0.00010, 0.00010, 0],
		[-0.00010, 0.00015, 0],
		[-0.00010, 0.00020, 0]

	],
	challengeOverlays: [],
	
	numCaptures: 0,
	captureOverlays: [],
	
	currentLocation: null,
	overlaySize: 10,
	challengeOverlaysAdded: false, 
	challengeOverlayResource: new AR.ImageResource("assets/Overlay.png"),
	captureOverlayResource: new AR.ImageResource("assets/Overlay.png"),
	challengeEnabled: true,
	
	init: function() {
		// Set up callbacks
		AR.context.onLocationChanged = Overlays.onLocationChanged;
		document.getElementById("captureButton").addEventListener("click", Overlays.onScreenClick);
		var challengeButton = document.getElementById("challengeButton");
		if (Overlays.challengeEnabled) {
			challengeButton.className = "enabled";
		} else {
			challengeButton.className = "";
		}
		challengeButton.addEventListener("click", Overlays.toggleChallenge);
	},
	
	onLocationChanged: function(latitude, longitude, altitude, accuracy) {
		console.log("Location changed", latitude, longitude, altitude, accuracy);
		
		// Create the Challenge overlays if we haven't done that yet.
		if (! Overlays.challengeOverlaysAdded) {
			Overlays.createChallengeOverlays(latitude, longitude, altitude, accuracy);
			Overlays.challengeOverlaysAdded = true;
		}
		
		// Update the current location
		Overlays.currentLocation = {
			"latitude":  latitude,
			"longitude": longitude,
			"altitude":  altitude,
			"accuracy":  accuracy,
			"heading": null
		};
		
		// Get heading in a hilariously roundabout way
		// document.location = "architectsdk://button?action=getHeading";
	},
	
	onScreenClick: function() {
		console.log("Clicked the screen", Overlays.currentLocation);
		// Take a screenshot
		document.location = "architectsdk://button?action=captureScreen";
		// Overlays.createCaptureOverlay();
	},
	
	createChallengeOverlays: function(latitude, longitude, altitude, accuracy) {
		var scaleFactor = 1;
		
		for(var i = 0; i < Overlays.challengeOverlayLocations.length; i++) {
			var overlayLocation = new AR.GeoLocation(
				latitude  + Overlays.challengeOverlayLocations[i][0] * scaleFactor,
				longitude + Overlays.challengeOverlayLocations[i][1] * scaleFactor,
				altitude  + Overlays.challengeOverlayLocations[i][2] * scaleFactor
			);
			var overlayDrawable = new AR.ImageDrawable(
				Overlays.challengeOverlayResource, Overlays.overlaySize, {
					opacity: 0.5
				}
			);
			
    		var overlayObject = new AR.GeoObject(overlayLocation, {
    			drawables: {
					cam: [overlayDrawable] 
				},
				enabled: Overlays.challengeEnabled
  			});
  			
    		Overlays.challengeOverlays.push(overlayObject);
		}
	},
	
	toggleChallenge: function() {
		Overlays.challengeEnabled = ! Overlays.challengeEnabled;
		
		if (Overlays.challengeEnabled) {
			document.getElementById("challengeButton").className = "enabled";
		} else {
			document.getElementById("challengeButton").className = "";
		}
		
		for(var i = 0; i < Overlays.challengeOverlays.length; i++) {
			Overlays.challengeOverlays[i].enabled = Overlays.challengeEnabled;
		}
	},
	
	createCaptureOverlay: function() {
		console.log("Creating capture overlay");
		
		if (Overlays.currentLocation === null) {
			alert("An error occurred while capturing please try again.");
			return;
		}
		
		// Get compass heading in a hilariously roundabout way
		document.location = "architectsdk://button?action=getHeading";
		
		var overlayLocation = new AR.GeoLocation(
			Overlays.currentLocation.latitude + 0.00010,
			Overlays.currentLocation.longitude + -0.00020,
			Overlays.currentLocation.altitude
		);
		
		var overlayDrawable = new AR.ImageDrawable(
			Overlays.captureOverlayResource, Overlays.overlaySize, {
				opacity: 0.5
			}
		);
		
		var overlayObject = new AR.GeoObject(overlayLocation, {
			drawables: {
				cam: [overlayDrawable] 
			},
			enabled: Overlays.challengeEnabled
		});
		
		Overlays.captureOverlays.push(overlayObject);
	}
};

Overlays.init();
