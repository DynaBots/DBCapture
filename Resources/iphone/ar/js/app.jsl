var currentLocation = {
	"latitude": null,
	"longitude": null,
	"altitude": null,
	"accuracy": null
};

// AR.context.onLocationChanged = function(latitude, longitude, altitude, accuracy) {
	// currentLocation.latitude  = latitude;
	// currentLocation.longitude = longitude;
	// currentLocation.altitude = altitude;
	// currentLocation.accuracy = accuracy;
// };

// var World = {
	// init: function initFn() {
	    // AR.context.onLocationChanged = World.onLocationChanged;
	// },
// 	
	// onLocationChanged: function onLocationChangedFn(latitude, longitude, altitude, accuracy) {
// 	
	    // AR.context.onLocationChanged = null;
// 	
	    // World.createMarkerAtLocation(latitude + 0.01, longitude - 0.0005, altitude - 0.06);
	// },
//     
    // createMarkerAtLocation: function createMarkerAtLocationFn(latitude, longitude, altitude) {
// 	
	    // var markerLocation = new AR.GeoLocation(latitude, longitude, altitude);
	    // var markerDrawable = new AR.ImageDrawable(World.markerDrawable, 3);
	    // var markerObject = new AR.GeoObject(markerLocation, {
	        // drawables: {
	            // cam: markerDrawable
	        // }
	    // });
	// }	
// };
// 
// World.init();

var Overlays = {
	existingLocations: [
		[ 0     , 0     , 0],
		
		[ 0.0010,-0.0020, 0],
		[ 0.0010,-0.0015, 0],
		[ 0.0010,-0.0010, 0],
		[ 0.0010,-0.0005, 0],
		[ 0.0010, 0.0000, 0],
		[ 0.0010, 0.0005, 0],
		[ 0.0010, 0.0010, 0],
		[ 0.0010, 0.0015, 0],
		[ 0.0010, 0.0020, 0],
		
		[-0.0010,-0.0020, 0],
		[-0.0010,-0.0015, 0],
		[-0.0010,-0.0010, 0],
		[-0.0010,-0.0005, 0],
		[-0.0010, 0.0000, 0],
		[-0.0010, 0.0005, 0],
		[-0.0010, 0.0010, 0],
		[-0.0010, 0.0015, 0],
		[-0.0010, 0.0020, 0]

	],
	
	currentLocation: null,
	
	challengeOverlaysAdded: false, 
	
	challengeOverlayResource: new AR.ImageResource("assets/ChallengeOverlay100.png"),
	
	captureOverlayResource: new AR.ImageResource("assets/CaptureOverlay100.png"),
	
	existing: [],
	
	init: function() {
		// Set up callbacks
		AR.context.onLocationChanged = Overlays.onLocationChanged;
		AR.context.onScreenClick = Overlays.onScreenClick;
	},
	
	onLocationChanged: function(latitude, longitude, altitude, accuracy) {
		console.log("Location changed", latitude, longitude, altitude, accuracy);
		
		// Create the Challenge overlays if we haven't done that yet.
		if (! Overlays.challengeOverlaysAdded) {
			Overlays.createChallengeOverlays(latitude, longitude, altitude, accuracy);
			Overlays.challengeOverlaysAdded = true;
		}
		
		// Update the current location
		Overlays.currentLocation = {
			"latitude": latitude,
			"longitude": longitude,
			"altitude": altitude,
			"accuracy": accuracy
		};
	},
	
	onScreenClick: function() {
		console.log("Clicked the screen", Overlays.currentLocation);
		// Take a screenshot
		document.location = "architectsdk://button?action=captureScreen";
	},
	
	createChallengeOverlays: function(latitude, longitude, altitude, accuracy) {
		var scaleFactor = 1/60;
		
		for(var i = 0; i < Overlays.existingLocations.length; i++) {
			var overlayLocation = new AR.GeoLocation(
				latitude + Overlays.existingLocations[i][0] * scaleFactor,
				longitude + Overlays.existingLocations[i][1] * scaleFactor,
				altitude + Overlays.existingLocations[i][2] * scaleFactor
			);
			var overlayDrawable = new AR.ImageDrawable(
				Overlays.challengeOverlayResource, 5.5, {
				opacity: 0.5
			});
			
    		var overlayObject = new AR.GeoObject(overlayLocation, {
    			drawables: {
					cam: [overlayDrawable] 
				}
  			});
  			
    		Overlays.existing.push(overlayObject);
		}
	},
	
	createCaptureOverlay: function(latitude, longitude, altitude) {
		var overlayLocation = new AR.GeoLocation(latitude + Overlays.existingLocations[i][0], longitude + Overlays.existingLocations[i][1], altitude + Overlays.existingLocations[i][2]);
		var overlayDrawable = new AR.ImageDrawable(Overlays.challengeOverlay, 5.5);
		
		var overlayObject = new AR.GeoObject(overlayLocation, {
			drawables : { cam : [overlayDrawable] }
		});
		
		Overlays.existing.push(overlayObject);
	}
};

Overlays.init();
